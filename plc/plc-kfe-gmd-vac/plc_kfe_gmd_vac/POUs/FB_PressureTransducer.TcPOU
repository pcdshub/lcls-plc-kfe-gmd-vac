<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_PressureTransducer" Id="{9872138d-1d57-4ec1-bb67-dc57d4aea08b}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_PressureTransducer
VAR_OUTPUT
	{attribute 'pytmc' := 'pv:'}
	Sensor : ST_PressureSensor;
END_VAR

VAR_INPUT
	rDefaultSP : REAL; (* Must assign a default value at instantiation*)
	i_rFULL_SCALE: REAL;
END_VAR

VAR
	iCurrent : REAL;
	AlarmTOF : TOF;

	(*IOs to be linked*)
	iError AT %I* : BOOL; // Link to terminal diagnostics
	i_iPRESS_R AT %I* :INT; // input Pressure // Link to analog Input
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// for SETRA  4-20mA outout

(* Real-value calculation *)
Sensor.rFull_Scale:=i_rFULL_SCALE;
iCurrent := 20*INT_TO_REAL(Sensor.iPRESS_R)/32767;

  IF iError THEN; //reading less than 4mA
  	 Sensor.rPRESS := -1;
	 Sensor.xPStateAlarm:= TRUE;
	 ELSE 
		 Sensor.rPRESS := LREAL_TO_REAL(iCurrent*Sensor.rFull_Scale); //FULL scale in Psi for pressure transducer ???
  END_IF
  
 (* Validate setpoint *)
	IF (Sensor.rPressSP < Sensor.rMinPressSP OR Sensor.rPressSP > Sensor.rMaxPressSP) THEN;
		Sensor.rPressSP := rDefaultSP;
	END_IF

 (* Set alarm bit when pressure lower and equal to setpoint, delay off for 60s*)
  
  AlarmTOF (IN := Sensor.rPRESS <= Sensor.rPressSP, PT := T#60S, Q => Sensor.xPstateAlarm);
  
	 
	 
  
 (*Soft IO Mapping*)
  ACT_IO();

  
  
  ]]></ST>
    </Implementation>
    <Action Name="ACT_IO" Id="{7f5612ed-2f27-4642-962e-b93694071fcd}">
      <Implementation>
        <ST><![CDATA[Sensor.iPRESS_R := i_iPRESS_R;]]></ST>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>